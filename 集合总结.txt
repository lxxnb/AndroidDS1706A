anroid架构
MVC MODE（数据） VIEW（xml） CONTRCol（控制器Activity）
MVP（重点）MODE（数据）VIEW（xml）Presenter（控制M和V）
export PATH=${PATH}:/Users/lvxinxin/Library/Android/sdk/ndk-bundle 
A_NDK_ROOT=/Users/lvxinin/Library/Android/sdk/ndk-bundle
export A_NDK_ROOT



Last login: Thu Oct 31 08:48:54 on console
lvxinxindeMacBook-Pro:~ lvxinxin$ git
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
lvxinxindeMacBook-Pro:~ lvxinxin$ clear

lvxinxindeMacBook-Pro:~ lvxinxin$ git config --global user.name "lvxinxin"
lvxinxindeMacBook-Pro:~ lvxinxin$ git config --global user.email "18513426687@163.com"
lvxinxindeMacBook-Pro:~ lvxinxin$ cd
lvxinxindeMacBook-Pro:~ lvxinxin$ cd Macintosh HD/用户/lvxinxin
-bash: cd: Macintosh: No such file or directory
lvxinxindeMacBook-Pro:~ lvxinxin$ cd lvxinxin
-bash: cd: lvxinxin: No such file or directory
lvxinxindeMacBook-Pro:~ lvxinxin$ cd Macintosh HD ▸ 用户 ▸ lvxinxin
-bash: cd: Macintosh: No such file or directory
lvxinxindeMacBook-Pro:~ lvxinxin$ cd Macintosh HD/user
-bash: cd: Macintosh: No such file or directory
lvxinxindeMacBook-Pro:~ lvxinxin$ la
-bash: la: command not found
lvxinxindeMacBook-Pro:~ lvxinxin$ pwd
/Users/lvxinxin
lvxinxindeMacBook-Pro:~ lvxinxin$ ls
AndoridDSProject	AndroidZHLXProject	Movies
AndroidDSJJ		AndroidZHXMSZ		Music
AndroidDianShangProject	Desktop			Pictures
AndroidDsOneProject	Documents		Postman
AndroidProject		Downloads		Public
AndroidSXOne		FlutterProject		flutter
AndroidTestProject	Library			health
lvxinxindeMacBook-Pro:~ lvxinxin$ cd AndroidDSProject
-bash: cd: AndroidDSProject: No such file or directory
lvxinxindeMacBook-Pro:~ lvxinxin$ cd AndroidDSJJ
lvxinxindeMacBook-Pro:AndroidDSJJ lvxinxin$ cd../
-bash: cd../: No such file or directory
lvxinxindeMacBook-Pro:AndroidDSJJ lvxinxin$ cd..
-bash: cd..: command not found
lvxinxindeMacBook-Pro:AndroidDSJJ lvxinxin$ cd..
-bash: cd..: command not found
lvxinxindeMacBook-Pro:AndroidDSJJ lvxinxin$ cd...
-bash: cd...: command not found
lvxinxindeMacBook-Pro:AndroidDSJJ lvxinxin$ cd Test
-bash: cd: Test: No such file or directory
lvxinxindeMacBook-Pro:AndroidDSJJ lvxinxin$ cd..
-bash: cd..: command not found
lvxinxindeMacBook-Pro:AndroidDSJJ lvxinxin$ cd/
-bash: cd/: No such file or directory
lvxinxindeMacBook-Pro:AndroidDSJJ lvxinxin$ cd\
> cd
-bash: cdcd: command not found
lvxinxindeMacBook-Pro:AndroidDSJJ lvxinxin$ cd ..
lvxinxindeMacBook-Pro:~ lvxinxin$ cd Test
lvxinxindeMacBook-Pro:Test lvxinxin$ touch lvxx.txt
lvxinxindeMacBook-Pro:Test lvxinxin$ git init
Initialized empty Git repository in /Users/lvxinxin/Test/.git/
lvxinxindeMacBook-Pro:Test lvxinxin$ git add "lvxx.txt"
lvxinxindeMacBook-Pro:Test lvxinxin$ git commit -m "first上传"
[master (root-commit) d4856d1] first上传
 1 file changed, 1 insertion(+)
 create mode 100644 lvxx.txt
lvxinxindeMacBook-Pro:Test lvxinxin$ git status
On branch master
nothing to commit, working tree clean
lvxinxindeMacBook-Pro:Test lvxinxin$ git branch -r 
lvxinxindeMacBook-Pro:Test lvxinxin$ git push -u origin master
fatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
lvxinxindeMacBook-Pro:Test lvxinxin$ git remote show origin
fatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
lvxinxindeMacBook-Pro:Test lvxinxin$ ssh-keygen -t rsa -C "lvxinxin"
Generating public/private rsa key pair.
Enter file in which to save the key (/Users/lvxinxin/.ssh/id_rsa): lvxinxin
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in lvxinxin.
Your public key has been saved in lvxinxin.pub.
The key fingerprint is:
SHA256:39qv8SoD+DyJcadtTHtGQ250X4chdPLn2vjyO9gfs9s lvxinxin
The key's randomart image is:
+---[RSA 2048]----+
|           .o .  |
|            .+.  |
|             ..o.|
|            o ooo|
|       .S  + . .+|
|      o o.o.=  +.|
|       * O.+o.=o.|
|      . * Boo+.+=|
|         o.=++o*E|
+----[SHA256]-----+
lvxinxindeMacBook-Pro:Test lvxinxin$ git remote add origin https://github.com/lxxnb/AndoridDSProject.git
lvxinxindeMacBook-Pro:Test lvxinxin$ git push -u origin master
Username for 'https://github.com': lvxinxin
Password for 'https://lvxinxin@github.com': 
remote: Invalid username or password.
fatal: Authentication failed for 'https://github.com/lxxnb/AndoridDSProject.git/'
lvxinxindeMacBook-Pro:Test lvxinxin$ git remote add origin https://github.com/lxxnb/AndoridDSProject.git
fatal: remote origin already exists.
lvxinxindeMacBook-Pro:Test lvxinxin$ git push -u origin master
Username for 'https://github.com': 18513426687@163.com
Password for 'https://18513426687@163.com@github.com': 
To https://github.com/lxxnb/AndoridDSProject.git
 ! [rejected]        master -> master (fetch first)
error: failed to push some refs to 'https://github.com/lxxnb/AndoridDSProject.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
lvxinxindeMacBook-Pro:Test lvxinxin$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)

	lvxinxin
	lvxinxin.pub

nothing added to commit but untracked files present (use "git add" to track)
lvxinxindeMacBook-Pro:Test lvxinxin$ git remote -v
origin	https://github.com/lxxnb/AndoridDSProject.git (fetch)
origin	https://github.com/lxxnb/AndoridDSProject.git (push)
lvxinxindeMacBook-Pro:Test lvxinxin$ git init
Reinitialized existing Git repository in /Users/lvxinxin/Test/.git/
lvxinxindeMacBook-Pro:Test lvxinxin$ git add lvxinxin.txt
fatal: pathspec 'lvxinxin.txt' did not match any files
lvxinxindeMacBook-Pro:Test lvxinxin$ gitadd lvxx.txt
-bash: gitadd: command not found
lvxinxindeMacBook-Pro:Test lvxinxin$ git add lvxx.txt
lvxinxindeMacBook-Pro:Test lvxinxin$ git commit -m"提交文本"
On branch master
Untracked files:
	lvxinxin
	lvxinxin.pub

nothing added to commit but untracked files present
lvxinxindeMacBook-Pro:Test lvxinxin$ git push -u origin master
To https://github.com/lxxnb/AndoridDSProject.git
 ! [rejected]        master -> master (fetch first)
error: failed to push some refs to 'https://github.com/lxxnb/AndoridDSProject.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
lvxinxindeMacBook-Pro:Test lvxinxin$ git pull --rebase origin master

warning: no common commits
remote: Enumerating objects: 85, done.
remote: Total 85 (delta 0), reused 0 (delta 0), pack-reused 85
Unpacking objects: 100% (85/85), done.
From https://github.com/lxxnb/AndoridDSProject
 * branch            master     -> FETCH_HEAD
 * [new branch]      master     -> origin/master
First, rewinding head to replay your work on top of it...
Applying: first上传
lvxinxindeMacBook-Pro:Test lvxinxin$ 
lvxinxindeMacBook-Pro:Test lvxinxin$ git push -u origin master
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 12 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 292 bytes | 292.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/lxxnb/AndoridDSProject.git
   668625c..2dbda2c  master -> master
Branch 'master' set up to track remote branch 'master' from 'origin'.
lvxinxindeMacBook-Pro:Test lvxinxin$ git branch
* master
lvxinxindeMacBook-Pro:Test lvxinxin$ git branch deve
lvxinxindeMacBook-Pro:Test lvxinxin$ git branch
  deve
* master
lvxinxindeMacBook-Pro:Test lvxinxin$ git branch -a
  deve
* master
  remotes/origin/master
lvxinxindeMacBook-Pro:Test lvxinxin$ git checkout deve
Switched to branch 'deve'
lvxinxindeMacBook-Pro:Test lvxinxin$ git branch
* deve
  master
lvxinxindeMacBook-Pro:Test lvxinxin$ git status
On branch deve
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	modified:   lvxx.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	lvxinxin
	lvxinxin.pub

no changes added to commit (use "git add" and/or "git commit -a")
lvxinxindeMacBook-Pro:Test lvxinxin$ git add .
lvxinxindeMacBook-Pro:Test lvxinxin$ git status
On branch deve
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	new file:   lvxinxin
	new file:   lvxinxin.pub
	modified:   lvxx.txt

lvxinxindeMacBook-Pro:Test lvxinxin$ git commit -m'test commit'
[deve 3689503] test commit
 3 files changed, 33 insertions(+), 1 deletion(-)
 create mode 100644 lvxinxin
 create mode 100644 lvxinxin.pub
lvxinxindeMacBook-Pro:Test lvxinxin$ git status
On branch deve
nothing to commit, working tree clean
lvxinxindeMacBook-Pro:Test lvxinxin$ git status
On branch deve
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	modified:   lvxx.txt

no changes added to commit (use "git add" and/or "git commit -a")
lvxinxindeMacBook-Pro:Test lvxinxin$ git add lvxx.txt
lvxinxindeMacBook-Pro:Test lvxinxin$ git status
On branch deve
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	modified:   lvxx.txt

lvxinxindeMacBook-Pro:Test lvxinxin$ git commit 
hint: Waiting for your editor to close the file... error: There was a problem with the editor 'vi'.
Please supply the message using either -m or -F option.
lvxinxindeMacBook-Pro:Test lvxinxin$ git branch
* deve
  master
lvxinxindeMacBook-Pro:Test lvxinxin$ git checkout master
error: Your local changes to the following files would be overwritten by checkout:
	lvxx.txt
Please commit your changes or stash them before you switch branches.
Aborting
lvxinxindeMacBook-Pro:Test lvxinxin$ git commit -m'test commit 2'
[deve 7d6f1ad] test commit 2
 1 file changed, 2 insertions(+), 1 deletion(-)
lvxinxindeMacBook-Pro:Test lvxinxin$ git checkout master
Switched to branch 'master'
Your branch is up to date with 'origin/master'.
lvxinxindeMacBook-Pro:Test lvxinxin$ git checkout deve
Switched to branch 'deve'
lvxinxindeMacBook-Pro:Test lvxinxin$ git branch -a
* deve
  master
  remotes/origin/master
lvxinxindeMacBook-Pro:Test lvxinxin$ git branch origin deve : deve
usage: git branch [<options>] [-r | -a] [--merged | --no-merged]
   or: git branch [<options>] [-l] [-f] <branch-name> [<start-point>]
   or: git branch [<options>] [-r] (-d | -D) <branch-name>...
   or: git branch [<options>] (-m | -M) [<old-branch>] <new-branch>
   or: git branch [<options>] (-c | -C) [<old-branch>] <new-branch>
   or: git branch [<options>] [-r | -a] [--points-at]
   or: git branch [<options>] [-r | -a] [--format]

Generic options
    -v, --verbose         show hash and subject, give twice for upstream branch
    -q, --quiet           suppress informational messages
    -t, --track           set up tracking mode (see git-pull(1))
    -u, --set-upstream-to <upstream>
                          change the upstream info
    --unset-upstream      Unset the upstream info
    --color[=<when>]      use colored output
    -r, --remotes         act on remote-tracking branches
    --contains <commit>   print only branches that contain the commit
    --no-contains <commit>
                          print only branches that don't contain the commit
    --abbrev[=<n>]        use <n> digits to display SHA-1s

Specific git-branch actions:
    -a, --all             list both remote-tracking and local branches
    -d, --delete          delete fully merged branch
    -D                    delete branch (even if not merged)
    -m, --move            move/rename a branch and its reflog
    -M                    move/rename a branch, even if target exists
    -c, --copy            copy a branch and its reflog
    -C                    copy a branch, even if target exists
    -l, --list            list branch names
    --create-reflog       create the branch's reflog
    --edit-description    edit the description for the branch
    -f, --force           force creation, move/rename, deletion
    --merged <commit>     print only branches that are merged
    --no-merged <commit>  print only branches that are not merged
    --column[=<style>]    list branches in columns
    --sort <key>          field name to sort on
    --points-at <object>  print only branches of the object
    -i, --ignore-case     sorting and filtering are case insensitive
    --format <format>     format to use for the output

lvxinxindeMacBook-Pro:Test lvxinxin$ git push origin deve:deve
Enumerating objects: 10, done.
Counting objects: 100% (10/10), done.
Delta compression using up to 12 threads
Compressing objects: 100% (6/6), done.
Writing objects: 100% (8/8), 2.33 KiB | 2.33 MiB/s, done.
Total 8 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), done.
remote: 
remote: Create a pull request for 'deve' on GitHub by visiting:
remote:      https://github.com/lxxnb/AndoridDSProject/pull/new/deve
remote: 
To https://github.com/lxxnb/AndoridDSProject.git
 * [new branch]      deve -> deve
lvxinxindeMacBook-Pro:Test lvxinxin$ git pull orign deve:deve
fatal: 'orign' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
lvxinxindeMacBook-Pro:Test lvxinxin$ git pull origin deve:deve
Already up to date.
lvxinxindeMacBook-Pro:Test lvxinxin$ 
